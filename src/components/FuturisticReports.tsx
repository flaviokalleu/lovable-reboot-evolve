
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { useQuery } from '@tanstack/react-query';
import { supabase } from '@/integrations/supabase/client';
import { useAuth } from '@/contexts/AuthContext';
import { useToast } from '@/hooks/use-toast';
import { Brain, TrendingUp, BarChart3, PieChart, Zap, Sparkles, Download, RefreshCw } from 'lucide-react';
import ModernChart from './ModernChart';

const FuturisticReports = () => {
  const { user } = useAuth();
  const { toast } = useToast();
  const [aiAnalysis, setAiAnalysis] = useState<string>('');
  const [isAnalyzing, setIsAnalyzing] = useState(false);

  const { data: financialSummary } = useQuery({
    queryKey: ['financial-summary', user?.id],
    queryFn: async () => {
      if (!user) return null;

      const { data: transactions } = await supabase
        .from('transactions')
        .select('*')
        .eq('user_id', user.id)
        .order('created_at', { ascending: false });

      const totalIncome = transactions?.filter(t => t.type === 'income').reduce((sum, t) => sum + Number(t.amount), 0) || 0;
      const totalExpenses = transactions?.filter(t => t.type === 'expense').reduce((sum, t) => sum + Number(t.amount), 0) || 0;
      const balance = totalIncome - totalExpenses;

      return { totalIncome, totalExpenses, balance, transactions: transactions || [] };
    },
    enabled: !!user
  });

  const generateAIReport = async () => {
    if (!user || !financialSummary) return;

    setIsAnalyzing(true);
    try {
      const prompt = `Analise os dados financeiros do usu√°rio e forne√ßa insights detalhados:
      
      Receitas totais: R$ ${financialSummary.totalIncome.toLocaleString('pt-BR')}
      Despesas totais: R$ ${financialSummary.totalExpenses.toLocaleString('pt-BR')}
      Saldo atual: R$ ${financialSummary.balance.toLocaleString('pt-BR')}
      Total de transa√ß√µes: ${financialSummary.transactions.length}
      
      Por favor, forne√ßa:
      1. An√°lise do padr√£o de gastos
      2. Sugest√µes de economia
      3. Alertas sobre gastos excessivos
      4. Recomenda√ß√µes de investimento
      5. Previs√µes para os pr√≥ximos meses`;

      const { data, error } = await supabase.functions.invoke('ai-financial-advisor', {
        body: { prompt, userId: user.id }
      });

      if (error) throw error;

      setAiAnalysis(data.response);
      toast({
        title: 'An√°lise IA conclu√≠da!',
        description: 'Relat√≥rio financeiro gerado com sucesso.',
      });
    } catch (error: any) {
      console.error('Erro na an√°lise IA:', error);
      toast({
        title: 'Erro na an√°lise',
        description: error.message,
        variant: 'destructive',
      });
    } finally {
      setIsAnalyzing(false);
    }
  };

  const downloadReport = () => {
    if (!aiAnalysis || !financialSummary) return;

    const reportContent = `
RELAT√ìRIO FINANCEIRO INTELIGENTE
Generated by Gemini AI
${new Date().toLocaleString('pt-BR')}

RESUMO FINANCEIRO:
- Receitas: R$ ${financialSummary.totalIncome.toLocaleString('pt-BR')}
- Despesas: R$ ${financialSummary.totalExpenses.toLocaleString('pt-BR')}
- Saldo: R$ ${financialSummary.balance.toLocaleString('pt-BR')}

AN√ÅLISE IA:
${aiAnalysis}
    `;

    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `relatorio-financeiro-${new Date().toISOString().split('T')[0]}.txt`;
    a.click();
    URL.revokeObjectURL(url);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-6">
      <div className="max-w-7xl mx-auto space-y-8">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-5xl font-bold bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent mb-4">
            Relat√≥rios Futuristas
          </h1>
          <p className="text-slate-300 text-xl max-w-3xl mx-auto">
            An√°lise inteligente powered by Gemini AI para insights financeiros avan√ßados
          </p>
        </div>

        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <Card className="border-cyan-500/30 bg-gradient-to-br from-cyan-900/30 to-slate-900/50 backdrop-blur-sm">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-cyan-300 text-sm font-medium">Receitas Totais</p>
                  <p className="text-3xl font-bold text-white">
                    R$ {financialSummary?.totalIncome.toLocaleString('pt-BR') || '0,00'}
                  </p>
                </div>
                <TrendingUp className="h-12 w-12 text-cyan-400" />
              </div>
            </CardContent>
          </Card>

          <Card className="border-purple-500/30 bg-gradient-to-br from-purple-900/30 to-slate-900/50 backdrop-blur-sm">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-purple-300 text-sm font-medium">Despesas Totais</p>
                  <p className="text-3xl font-bold text-white">
                    R$ {financialSummary?.totalExpenses.toLocaleString('pt-BR') || '0,00'}
                  </p>
                </div>
                <BarChart3 className="h-12 w-12 text-purple-400" />
              </div>
            </CardContent>
          </Card>

          <Card className="border-pink-500/30 bg-gradient-to-br from-pink-900/30 to-slate-900/50 backdrop-blur-sm">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-pink-300 text-sm font-medium">Saldo Atual</p>
                  <p className={`text-3xl font-bold ${financialSummary?.balance >= 0 ? 'text-green-400' : 'text-red-400'}`}>
                    R$ {financialSummary?.balance.toLocaleString('pt-BR') || '0,00'}
                  </p>
                </div>
                <PieChart className="h-12 w-12 text-pink-400" />
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Charts Grid */}
        <div className="grid grid-cols-1 xl:grid-cols-2 gap-6 mb-8">
          <ModernChart type="area" title="üìä Fluxo de Caixa Temporal" timeframe="30d" />
          <ModernChart type="pie" title="üéØ Distribui√ß√£o por Categoria" timeframe="30d" />
          <ModernChart type="bar" title="üìà Comparativo Mensal" timeframe="90d" />
          <ModernChart type="line" title="‚ö° Tend√™ncia de Saldo" timeframe="90d" />
        </div>

        {/* AI Analysis Section */}
        <Card className="border-emerald-500/30 bg-gradient-to-br from-emerald-900/30 to-slate-900/50 backdrop-blur-sm">
          <CardHeader className="border-b border-emerald-500/20">
            <CardTitle className="flex items-center gap-3 text-white">
              <div className="p-3 bg-gradient-to-br from-emerald-500 to-cyan-500 rounded-xl">
                <Brain className="h-6 w-6" />
              </div>
              <div className="flex items-center gap-2">
                An√°lise Inteligente Gemini AI
                <Sparkles className="h-5 w-5 text-emerald-400 animate-pulse" />
              </div>
            </CardTitle>
          </CardHeader>
          <CardContent className="p-6 space-y-6">
            <div className="flex gap-4">
              <Button
                onClick={generateAIReport}
                disabled={isAnalyzing || !financialSummary}
                className="bg-gradient-to-r from-emerald-600 to-cyan-600 hover:from-emerald-700 hover:to-cyan-700 text-white flex-1"
              >
                {isAnalyzing ? (
                  <>
                    <RefreshCw className="h-5 w-5 mr-2 animate-spin" />
                    Analisando com IA...
                  </>
                ) : (
                  <>
                    <Zap className="h-5 w-5 mr-2" />
                    Gerar Relat√≥rio IA
                  </>
                )}
              </Button>
              
              {aiAnalysis && (
                <Button
                  onClick={downloadReport}
                  variant="outline"
                  className="border-emerald-500 text-emerald-400 hover:bg-emerald-500/10"
                >
                  <Download className="h-5 w-5 mr-2" />
                  Download
                </Button>
              )}
            </div>

            {aiAnalysis && (
              <div className="bg-gradient-to-br from-slate-800/80 to-emerald-900/20 rounded-xl p-6 border border-emerald-500/30">
                <h4 className="text-emerald-300 font-semibold mb-4 flex items-center gap-2">
                  <Brain className="h-5 w-5" />
                  Insights Financeiros Personalizados
                </h4>
                <div className="prose prose-invert max-w-none">
                  <p className="text-slate-300 whitespace-pre-wrap leading-relaxed">{aiAnalysis}</p>
                </div>
              </div>
            )}

            {!aiAnalysis && !isAnalyzing && (
              <div className="text-center py-12">
                <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-br from-emerald-500/20 to-cyan-500/20 rounded-full flex items-center justify-center">
                  <Brain className="h-10 w-10 text-emerald-400" />
                </div>
                <h3 className="text-xl font-semibold text-white mb-2">
                  Pronto para an√°lise inteligente
                </h3>
                <p className="text-slate-400">
                  Clique em "Gerar Relat√≥rio IA" para obter insights personalizados sobre suas finan√ßas
                </p>
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default FuturisticReports;
